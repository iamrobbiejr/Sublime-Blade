%YAML 1.2
---
name: Laravel Blade
file_extensions:
  - blade
  - blade.php
scope: text.blade

contexts:
  main:
    - match: ''
      push: scope:text.html.basic
      with_prototype:
      - include: comments
      - include: keywords
      - include: raw
      - include: statements
      - include: inline-php

  comments:
    - match: '{{--'
      scope: punctuation.definition.comment.begin.html
      push:
        - meta_scope: comment.block.blade
      with_prototype:
      - match: '--}}'
        captures:
          0: punctuation.definition.comment.end.html
        pop: true

  keywords:
    - match: \@\b(debug|set|i(f|nject|nclude)|elseif|for(else|each)|for|while|extends|unless|each|yield|lang|choice|section|render|block|can|p(artial|ush)|hasSection|stack)
      captures:
        0: entity.name.tag.block.any.html
        1: constant.other.inline-data.html
        2: constant.other.inline-data.html
      push:
        - meta_scope: text.html.blade
        - meta_content_scope: text.html.blade
        - match: '(?<=\))'
          pop: true
        - include: 'scope:source.php'

    - match: '\@\b(e(mpty|nd(if|for(else|each)|while|can|for|unless|block|p(artial|ush)|section)|lse)|s(ection|how|top)|continue|break|parent|overwrite|append)\b'
      scope: text.html.blade
      captures:
        0: entity.name.tag.block.any.html
        1: constant.other.inline-data.html
      pop: false

    - match: (\s{0}|^)(\@)\b([a-zA-Z_]+)\b(?=(|\s*|)\()
      captures:
        0: entity.name.tag.block.any.html
        1: constant.other.inline-data.html
        2: constant.other.inline-data.html
      push:
        - meta_scope: text.html.blade
        - meta_content_scope: text.html.blade
        - match: '(?<=\))'
          pop: true
        - include: 'scope:source.php'

    - match: (\@)(\b[a-zA-Z_]+\b)(\=)(\")(.+)(\()(\')(.+)(\')(\))(\")
      captures:
        0: entity.name.tag.block.any.html
        1: punctuation.definition.variable.js
        2: variable.other.conditional.js
        3: meta.class.js
        4: meta.class.js
        5: entity.name.type.class.js
        6: meta.class.js
        7: meta.class.js
        8: entity.name.type.class.js
        9: meta.class.js
        10: meta.class.js
        11: meta.class.js

  raw:
    - match: '@\{\{\{?-?'
      captures:
        0: entity.name.tag.block.any.html
      push:
        - meta_scope: text.html.blade
        - meta_content_scope: text.html.blade
        - match: '-?\}?\}\}'
          captures:
            0: entity.name.tag.block.any.html
            1: entity.name.tag.block.any.html
          pop: true

  function-parameters:
    - match: '\)'
      scope: punctuation.definition.group.end.php

  statements:
    - match: '\{(!!)|(\{\{\{?)-?'
      scope: entity.name.tag.block.any.html
      push:
        - meta_scope: meta.embedded.line.php
        - meta_content_scope: source.php
        - match: '-?(\}?\}\})|(!!)\}'
          scope: entity.name.tag.block.any.html
          pop: true
        - include: scope:source.php

  inline-php:
    - match: <\?(?i:php|=)?
      scope: punctuation.section.embedded.begin.php
      push:
        - meta_scope: meta.embedded.line.php
        - meta_content_scope: source.php
        - match: (\?)>
          captures:
            0: punctuation.section.embedded.end.php
            1: source.php
          pop: true
        - include: scope:source.php